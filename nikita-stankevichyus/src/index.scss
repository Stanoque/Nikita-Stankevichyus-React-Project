@import "scss/fonts";
@import "scss/grid";
@import "scss/mixins";
@import "scss/normalize";
@import "scss/positioning";
@import "scss/reset";
@import "scss/templates";
@import "scss/vars";
@import "scss/margins-paddings";
@import "scss/colors";
@import "scss/animations";
@import "scss/fonts/FontAwesome/fontawesome.scss";
@import "scss/fonts/FontAwesome/solid.scss";
// @import "../node_modules/bootstrap/dist/css/bootstrap-grid.css";
// @import "../node_modules/bootstrap/dist/css/bootstrap.css";


// Setting data from vars.scss for each part of the page (header, main, aside, footer)
// Or, if there universal parameters, they'll be setted to everything
@if $use-universal != true {

  body * {
    font-family: map-get(map-get($fonts, main), font-main);
  }
  // COLORS
  @each $part, $data in $colors {
    #{$part} {
      background-color: map-get($data, background);
      border-color: map-get($data, border);
      .text-main, p, * {
        color: map-get($data, text-main);
      }
      .text-header, h1, h2, h3, h4, h5, h6 {
        color: map-get($data, text-header);
      }
      .text-link, a, link {
        color: map-get($data, text-link);
      }
      // button {
      //   padding: 10px;
      //   background-color: map-get($data, text-link);
      //   border: 1px solid map-get($data, text-link);
      //   border-radius: 5px;
      //   color: map-get($data, background);
      //   -webkit-transition: background-color 0.5s, color 0.5s;
      //   transition: background-color 0.5s, color 0.5s;
      // }

      // button:hover, button:active {
      //   background-color: desaturate(map-get($data, background), 50%);
      //   color: map-get($data, text-link);
      // }

      input {
        background-color: white;
        border: 3px solid map-get($data, border);
        color: #333;
        border-radius: 5px;
        padding: 10px;
      }
    }
  }

  // SIZES
  @each $part, $data in $sizes {
    #{$part} {
      .text-main, p{
        font-size: map-get($data, font-main);
      }

      @each $header, $size in map-get($data, font-header) {
        #{$header} {
          font-size: $size;
        }
      }

      .text-link, a, link {
        font-size: map-get($data, font-link);
      }
    }
  }

  // FONTS
  @each $part, $data in $fonts {
    #{$part} {
      .text-main, p , *{
        font-family: map-get($data, font-main);
        font-weight: map-get($data, font-weight-main);
        font-style: map-get($data, font-style-main);
      }
      .text-header, h1, h2, h3, h4, h5, h6 {
        font-family: map-get($data, font-header);
        font-weight: map-get($data, font-weight-header);
        font-style: map-get($data, font-style-header);
      }
      .text-link, a, link{
        font-family: map-get($data, font-link);
        font-weight: map-get($data, font-weight-link);
        font-style: map-get($data, font-style-link);
      }
    }
  }
} @else {

  $parts: (header, main, aside, footer);

  // COLORS
  @each $part in $parts {

    #{$part} {
      background-color: map-get(map-get($universal, colors), background);
      border-color: map-get(map-get($universal, colors), border);
      .text-main, p, * {
        color: map-get(map-get($universal, colors), text-main);
      }
      .text-header, h1, h2, h3, h4, h5, h6 {
        color: map-get(map-get($universal, colors), text-header);
      }
      .text-link, a, link {
        color: map-get(map-get($universal, colors), text-link);
      }
    }
  

  // SIZES
  
    #{$part} {

      .text-main, p{
        font-size: map-get(map-get($universal, font), font-main);
      }

      @each $header, $size in map-get(map-get($universal, size), font-header) {
        #{$header} {
          font-size: $size;
        }
      }

      .text-link, a, link {
        font-size: map-get($universal, font-link);
      }
    }
  

  // FONTS
  
    #{$part} {
      .text-main, p, *{
        font-family: map-get(map-get($universal, font), font-main);
        font-weight: map-get(map-get($universal, font), font-weight-main);
        font-style: map-get(map-get($universal, font), font-style-main);
      }
      .text-header, h1, h2, h3, h4, h5, h6 {
        font-family: map-get(map-get($universal, font), font-header);
        font-weight:  map-get(map-get($universal, font), font-weight-header);
        font-style:  map-get(map-get($universal, font), font-style-header);
      }
      .text-link, a, link {
        font-family: map-get(map-get($universal, font), font-link);
        font-weight: map-get(map-get($universal, font), font-weight-link);
        font-style: map-get(map-get($universal, font), font-style-link);
      }
    }
  }
}

.body {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.text-link, a, link {
  display: block;
  text-decoration: underline;
}


code {
  background-color: $light;
  color: map-get(map-get($colors, main), font-main);
  font-family: 'JetBrains Mono';
  padding: 5px;
}

.main_presentation, header  {
  h1, h2, h3, h4, h5, h6 {
    @include text-gradient(45deg, #071013, 40%, #23B5D3, 90%);
    
  }

}

* {
  scroll-behavior: smooth !important;
}

// aside h1, footer h1 {
//   @include text-gradient(135deg, #2b5876   , 10%,  #4e4376, 70%);
// }

img {
  max-width: 100%;
  height: auto;
  object-fit: contain;
}


.logo {
  width: 20%;
}


ul {
  width: 100%;
}

.buttons {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;

  > * {
    margin-bottom: 10px;
  }
}
.examples > *{
  margin-top: 15px;
}

.test-modal {
  background-color: white;
  width: 200px;
  height: 200px;
  border: 2px solid orange;
  border-radius: 5px;
}


.info {
  width: 95%;
 
  &_number {
  
  }
}


.main {
  &_content {
    height: 230vh;
  }
  &_presentation {
    min-height: 50%;

  }
  &_whyWe {
    // background-color: map-get(map-get($colors, main), text-link);
    min-height: 50%;
    width: 100% !important;
    h1, p {
      color: #DFE0E2 !important;
    }
    @include gradient(0deg, #071013, -10%, #23B5D3, 125%);
    .works {
      .work {
        width: 33%;
        
      }
    }
  }
}

body {
  min-height: max-content;
}

a{
  width: 100%;
  height: 100%;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
}


.header {
  @media (min-width: 1050px) {
    .toggler {
      display: none !important;
      position: absolute !important;
      pointer-events: none !important;
    }
    .nav--horizontal {
      .transparent {
        opacity: 1 !important;
	      pointer-events: all !important;
      }
    }
  }
  @media (max-width: 1050px){
  
    background: none;
    + main {
      margin-top: 0 !important;
    }
    width: 200px;
    height: 45vh;
    .nav--horizontal{
      height: 100%;
      margin-top: 0 !important;
    }
    
    .nav--horizontal ul{
      flex-direction: column;
      flex-wrap: nowrap;
      justify-content: space-between !important;
      height: 100%;
    }

  }
}

.sign_up {
  padding: 35px;
  // height: 550px;
  min-height: max-content;
  width: 300px;
  background-color: map-get(map-get($colors, header), background);
  color: map-get(map-get($colors, header), text-main);
}
.log_in {
  padding: 35px;
  min-height: max-content; 
  width: 300px;
  background-color: map-get(map-get($colors, header), background);
  color: map-get(map-get($colors, header), text-main);
}

.add_service {
  padding: 35px;
  min-height: max-content;
  width: 300px;
  background-color: map-get(map-get($colors, header), background);
  color: map-get(map-get($colors, header), text-main);
}

.edit_name, .edit_second_name, .edit_email {
  padding: 25px;
  min-height: max-content;
  width: 300px;
  background-color: map-get(map-get($colors, header), background);
  color: map-get(map-get($colors, header), text-main);
}

.invalid_note {
  color:rgba(255, 50, 50, 1);
}

.invalid_input {
  border: 3px solid rgba(255, 0, 0, 0.5) !important;
}

.transparent {
  opacity: 0;
  pointer-events: none !important;
}

.semi-transparent {
  opacity: 0.5;
}

.semi-transparent:hover {
  opacity: 1;
}

.home {
  height: 2250px;
  flex: 1 0 auto;
  &_presentation {
    min-height: 40%;
    h1, h2, h3, h4, h5, h6 {
      @include text-gradient(45deg, #071013, 40%, #23B5D3, 90%);
      
    }
  }

  &_whyWe {
    min-height: 60%;
    max-width: 100vw;
    h1, p {
      color: #DFE0E2 !important;
    }
    @include gradient(0deg, #071013, -10%, #23B5D3, 125%);
  }
}

.footer {
  height: 100px;
  flex-shrink: 0;
  width: 100vw;
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;
}

.button_project {
  
  font-weight: 500;
  font-size: 20px;
  min-width: max-content;
  width: 200px;
	box-sizing: border-box;
  padding: 15px;
  border: 0px;
  border-radius: 0px;
  -webkit-transition: background-color 0.5s, color 0.5s;
  transition: background-color 0.5s, color 0.5s;
	

}

.button_project--dark {
  background-color: map-get(map-get($colors, header), background);
  color: map-get(map-get($colors, header), text-link);
}

.button_project--dark:hover, .button_project--dark:active {
  background-color: map-get(map-get($colors, header), text-link);
  color: map-get(map-get($colors, header), background);
}

.button_project--primary {
  background-color: map-get(map-get($colors, header), text-link);
  color: map-get(map-get($colors, header), background);
}

.button_project--primary:hover, .button_project--primary:active {
  background-color: map-get(map-get($colors, header), background);
  color: map-get(map-get($colors, header), text-link);
}

.services {
  min-height: 100vh;
  @include gradient(0deg, #071013, -10%, #23B5D3, 125%);
  flex: 1 0 auto;
  width: 100vw;
  margin: 0 auto;
  * {
    color: white;
  }

  table {
    background-color: map-get(map-get($colors, header), background) !important;
    width: 75%;
    text-transform: uppercase;
    tr {
      cursor: pointer;
    }
    thead tr{
      cursor: unset;
    }
    tr:hover td{
      color: map-get(map-get($colors, header), text-link);
    }
  }
  

  thead tr th{
    font-weight: bold;
    
  }

  
}